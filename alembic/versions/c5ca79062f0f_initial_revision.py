"""Initial Revision

Revision ID: c5ca79062f0f
Revises: 
Create Date: 2024-01-10 11:45:00.854598

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c5ca79062f0f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drivers',
    sa.Column('driver_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('driver_id')
    )
    op.create_table('restaurants',
    sa.Column('restaurant_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('restaurant_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('addresses',
    sa.Column('address_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('pincode', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('cuisines',
    sa.Column('menu_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('restaurant_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.restaurant_id'], ),
    sa.PrimaryKeyConstraint('menu_id')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('restaurant_id', sa.UUID(), nullable=True),
    sa.Column('order_total', sa.DECIMAL(), nullable=True),
    sa.Column('delivery_status', sa.String(), nullable=False),
    sa.Column('driver_name', sa.String(), nullable=False),
    sa.Column('driver_phone', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.restaurant_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('ratings',
    sa.Column('rating_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('restaurant_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.restaurant_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('rating_id')
    )
    op.create_table('menu_items',
    sa.Column('menu_item_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('menu_id', sa.UUID(), nullable=True),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('price', sa.DECIMAL(), nullable=False),
    sa.Column('is_available', sa.Boolean(), server_default='True', nullable=False),
    sa.ForeignKeyConstraint(['menu_id'], ['cuisines.menu_id'], ),
    sa.PrimaryKeyConstraint('menu_item_id')
    )
    op.create_table('payments',
    sa.Column('payment_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('payment_method', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('menu_items')
    op.drop_table('ratings')
    op.drop_table('orders')
    op.drop_table('cuisines')
    op.drop_table('addresses')
    op.drop_table('users')
    op.drop_table('restaurants')
    op.drop_table('drivers')
    # ### end Alembic commands ###
